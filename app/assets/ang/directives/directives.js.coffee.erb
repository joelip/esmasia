app = angular.module('esmTestDirectives', [])

app.directive 'reloadLink', ['$window', ($window) ->
  restrict: 'A',
  link: (scope, element, attrs) ->
    element.on('click', ->
      $window.location.href = attrs.href
    )
]

app.directive 'elemAnimate', ['$window', ($window) ->
  restrict: 'A',
  link: (scope, element, attrs) ->
    trigger = $(window).height() - 50

    $(window).on('scroll', ->
      topOfWindow = $(window).scrollTop()

      pos = element.offset().top

      if pos < topOfWindow+trigger
        element.addClass(attrs.elemAnimate)
    )

]

app.directive 'tbModal', ['$rootScope', ($rootScope) ->
  restrict: 'EA',
  templateUrl: '<%= asset_path("templates/directives/registration.modal.html") %>'
]

app.directive 'processing', ['$rootScope', ($rootScope) ->
  restrict: 'A',
  link: (scope, element, attrs) ->

    $rootScope.$on('processing', ->
      element.css({
        'background-color': '#5D9CEC',
        'border-bottom': '4px solid #4A89DC'
      })
      element.html('processing <i class="ion-refreshing"></i>')
    )
    
]

app.directive 'errorMsg', ['$rootScope', ($rootScope) ->
  restrict: 'A',
  link: (scope, element, attrs) ->

    $rootScope.$on('paymentError', ->
      element.css({
        'background-color': '#ED5565',
        'border-bottom': '4px solid #DA4453'
      })
      element.html('<i class="ion-alert-circled"></i> Error processing payment. Refresh page.')
    )
]

app.directive 'successMsg', ['$rootScope', ($rootScope) ->
  restrict: 'A',
  link: (scope, element, attrs) ->

    $rootScope.$on 'registration:success', ->
      $('.registration-container').replaceWith('
        <div class="success-box">
          <h4>Succesful Registration</h4>
          <a href="/" class="success-home-link" reload-link>back to home</a>
        </div>
      ')

]

# validation directives
app.directive 'validDate', ['$rootScope', ($rootScope) ->
  restrict: 'A',
  scope: {
    vmonth: '=',
    vyear: '='
  }
  link: (scope, element, attrs) ->

    element.on('blur', ->
      if Stripe.card.validateExpiry(scope.vmonth, scope.vyear) is false
        $('.card-year, .card-month').css({
          'border': '2px solid #E9573F'  
        })
        alert "Please enter valid date."
      else
        $('.card-year, .card-month').css({
          'border': '2px solid #B8D9FF'  
        })
    )
]

app.directive 'validCard', ->
  restrict: 'A',
  scope:
    cardNum: '='
  link: (scope, element, attrs) ->
    element.on('blur', ->
      if Stripe.card.validateCardNumber(scope.cardNum) is false
        $('.card-number').css({
          'border': '2px solid #E9573F'  
        })
        alert "Please enter valid card number."
      else
        $('.card-number').css({
          'border': '2px solid #B8D9FF'  
        })
    )

app.directive 'validCvc', ->
  restrict: 'A',
  scope:
    vCvc: '='
  link: (scope, element, attrs) ->
    element.on('blur', ->
      if Stripe.card.validateCVC(scope.vCvc) is false
        $('.card-cvc').css({
          'border': '2px solid #E9573F'  
        })
        alert "Please enter valid card cvc."
      else
        $('.card-cvc').css({
          'border': '2px solid #B8D9FF'  
        })
    )

app.directive 'thirdClass', ->
  restrict: 'A',
  link: (scope, element, attrs) ->
    i = Number(attrs.thirdClass)
    if [1,2,5].indexOf(i) is -1
      element.addClass('even')
    else
      element.addClass('odd')

app.directive 'underlineFadeIn', ->
  restrict: 'C',
  scope:
    linkSelector: '='
  ,
  link: (scope, element, attrs) ->

    # link as a jQuery object
    s = $('[ui-sref="' + scope.linkSelector + '"]')
    # underline as a jQuery object
    line = s.find('.nav-link-underline-hover')

    offHover = ->
      line.css
        'opacity':           0,
        'transform':         'translateY(-8px)',
        '-webkit-transform': 'translateY(-8px)'

    onHover = ->
      line.css
        'opacity':           1,
        'transform':         'translateY(-16px)',
        '-webkit-transform': 'translateY(-16px)'
    
    element.hover(onHover, offHover)

app.directive 'dimOnScroll', ['$window', ($window) ->
  restrict: 'C',
  link: (scope, element, attrs) ->

    $(window).on 'scroll', ->
      element.css 'opacity', '0.2'

]